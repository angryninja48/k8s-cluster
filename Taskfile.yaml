---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

set: [pipefail]
shopt: [globstar]

vars:
  KUBERNETES_DIR: '{{.ROOT_DIR}}/kubernetes'
  BOOTSTRAP_DIR: '{{.KUBERNETES_DIR}}/bootstrap'
  SCRIPTS_DIR: '{{.ROOT_DIR}}/scripts'
  TALOS_DIR: '{{.BOOTSTRAP_DIR}}/talos'
  # PRIVATE_DIR: '{{.ROOT_DIR}}/.private'
  TALOSCONFIG: '{{.TALOS_DIR}}/clusterconfig/talosconfig'

env:
  KUBECONFIG: '{{.ROOT_DIR}}/kubeconfig'
  SOPS_AGE_KEY_FILE: '{{.ROOT_DIR}}/age.key'
  TALOSCONFIG: '{{.TALOSCONFIG}}'

includes:
  bootstrap: .taskfiles/bootstrap
  talos: .taskfiles/talos
  volsync: .taskfiles/volsync
  # template: .taskfiles/template

tasks:

  default: task --list

  reconcile:
    desc: Force Flux to pull in changes from your Git repository
    cmd: flux --namespace flux-system reconcile kustomization flux-system --with-source
    preconditions:
      - test -f {{.KUBECONFIG}}
      - which flux

  validate:
    desc: Validate repository consistency and YAML syntax
    cmd: '{{.SCRIPTS_DIR}}/validate-consistency.sh'
    silent: false

  validate:yaml:
    desc: Validate YAML syntax using yamllint
    cmd: yamllint kubernetes/
    preconditions:
      - which yamllint

  validate:kustomize:
    desc: Validate Kustomize manifests
    cmd: |
      find kubernetes/apps -name kustomization.yaml -execdir kustomize build . \; > /dev/null
      echo "‚úÖ All Kustomize manifests are valid"

  validate:flux:
    desc: Validate Flux Kustomizations
    cmd: |
      flux diff kustomization flux-system --path ./kubernetes/flux
      echo "‚úÖ Flux validation complete"
    preconditions:
      - test -f {{.KUBECONFIG}}
      - which flux

  # ===== Repository Consistency Tasks =====
  validate:consistency:
    desc: Run comprehensive repository consistency checks
    cmd: ./scripts/validate-consistency.sh

  validate:schemas:
    desc: Check schema compliance across all files
    cmd: |
      echo "üîç Checking schema compliance..."
      {{.SCRIPTS_DIR}}/validate-consistency.sh --schemas-only || true
      echo "‚ÑπÔ∏è  Schema validation complete"

  validate:all:
    desc: Run all validation checks
    deps:
      - validate:yaml
      - validate:kustomize
      - validate:consistency
    cmd: echo "üéâ All validation checks completed successfully!"

  fix:schemas:
    desc: Automatically fix common schema issues
    cmd: |
      echo "üîß Running schema fixes..."
      test -f {{.SCRIPTS_DIR}}/fix-schemas.sh && {{.SCRIPTS_DIR}}/fix-schemas.sh || echo "Schema fix script not found"
      echo "‚úÖ Schema fixes applied"

  fix:formatting:
    desc: Fix YAML formatting issues
    cmd: |
      echo "üîß Fixing YAML formatting..."
      {{.SCRIPTS_DIR}}/fix-timeout-format.sh
      echo "‚úÖ YAML formatting fixes applied"

  maintain:consistency:
    desc: Maintain repository consistency (run all fixes and validation)
    deps:
      - fix:formatting
      - fix:schemas
      - validate:all
    cmd: echo "üéâ Repository consistency maintenance complete!"
