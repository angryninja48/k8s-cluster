---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: home-assistant-secrets
  namespace: home
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: doppler-secrets
  target:
    name: home-assistant-secrets
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # Postgres database
        INIT_POSTGRES_DBNAME: home-assistant-v2
        INIT_POSTGRES_HOST: postgres17-rw.database.svc.cluster.local
        INIT_POSTGRES_USER: "{{ .HASS_POSTGRES_USER }}"
        INIT_POSTGRES_PASS: "{{ .HASS_POSTGRES_PASSWORD }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"

        # Home-Assistant
        TZ: Australia/Sydney
        # UV_CACHE_DIR: "/config/.cache/uv/" #https://github.com/home-assistant/core/issues/127812#issuecomment-2402211969
        SECRET_RECORDER_DB_URL: "postgresql://{{ .HASS_POSTGRES_USER }}:{{ .HASS_POSTGRES_PASSWORD }}@postgres17-rw.database.svc.cluster.local/home-assistant-v2"
        SECRET_INTERNAL_URL: "{{ .HASS_INTERNAL_URL }}"
        SECRET_EXTERNAL_URL: "{{ .HASS_EXTERNAL_URL }}"
        SECRET_TRUSTED_PROXIES_1: "{{ .HASS_TRUSTED_PROXIES_1 }}"
        SECRET_TRUSTED_PROXIES_2: "{{ .HASS_TRUSTED_PROXIES_2 }}"
        SECRET_TRUSTED_PROXIES_3: "{{ .HASS_TRUSTED_PROXIES_3 }}"
        SECRET_PROM_TOKEN: "{{ .HASS_PROM_TOKEN }}"

        # Home-Assistant Zones
        SECRET_ZONE_HOME_LATITUDE: "{{ .HASS_HOME_LATITUDE }}"
        SECRET_ZONE_HOME_LONGITUDE: "{{ .HASS_HOME_LONGITUDE }}"
        SECRET_ZONE_HOME_ELEVATION: "{{ .HASS_HOME_ELEVATION }}"
        SECRET_ZONE_OB_PARENTS_LATITUDE: "{{ .HASS_OB_PARENTS_LATITUDE }}"
        SECRET_ZONE_OB_PARENTS_LONGITUDE: "{{ .HASS_OB_PARENTS_LONGITUDE }}"

  dataFrom:
    - find:
        path: HASS_
    - find:
        path: POSTGRES_

---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: code-server-secrets
  namespace: home
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: doppler-secrets

  target:
    name: code-server-secrets
    template:
      engineVersion: v2
      data:
        GIT_DEPLOY_KEY: |
          {{ .HASS_CODESERVER_SSH_KEY }}
        GIT_AUTHOR_NAME: "{{ .GITHUB_NAME }}"
        GIT_COMMITTER_NAME: "{{ .GITHUB_NAME }}"
        GIT_AUTHOR_EMAIL: "{{ .GITHUB_EMAIL }}"
        GIT_COMMITTER_EMAIL: "{{ .GITHUB_EMAIL }}"

  data:
    - remoteRef:
        key: HASS_CODESERVER_SSH_KEY
      secretKey: HASS_CODESERVER_SSH_KEY
    - remoteRef:
        key: GITHUB_EMAIL
      secretKey: GITHUB_EMAIL
    - remoteRef:
        key: GITHUB_NAME
      secretKey: GITHUB_NAME

---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: home-assistant-dev-secrets
  namespace: home
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: doppler-secrets
  target:
    name: home-assistant-dev-secrets
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # Postgres database - separate dev database
        INIT_POSTGRES_DBNAME: home-assistant-dev
        INIT_POSTGRES_HOST: postgres17-rw.database.svc.cluster.local
        INIT_POSTGRES_USER: "{{ .HASS_POSTGRES_USER }}"
        INIT_POSTGRES_PASS: "{{ .HASS_POSTGRES_PASSWORD }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"

        # Home-Assistant Dev
        TZ: Australia/Sydney
        SECRET_RECORDER_DB_URL: "postgresql://{{ .HASS_POSTGRES_USER }}:{{ .HASS_POSTGRES_PASSWORD }}@postgres17-rw.database.svc.cluster.local/home-assistant-dev"
        SECRET_INTERNAL_URL: "{{ .HASS_DEV_INTERNAL_URL }}"
        SECRET_EXTERNAL_URL: "{{ .HASS_DEV_EXTERNAL_URL }}"
        SECRET_TRUSTED_PROXIES_1: "{{ .HASS_TRUSTED_PROXIES_1 }}"
        SECRET_TRUSTED_PROXIES_2: "{{ .HASS_TRUSTED_PROXIES_2 }}"
        SECRET_TRUSTED_PROXIES_3: "{{ .HASS_TRUSTED_PROXIES_3 }}"
        SECRET_PROM_TOKEN: "{{ .HASS_PROM_TOKEN }}"

        # Same zones as production for consistency
        SECRET_ZONE_HOME_LATITUDE: "{{ .HASS_HOME_LATITUDE }}"
        SECRET_ZONE_HOME_LONGITUDE: "{{ .HASS_HOME_LONGITUDE }}"
        SECRET_ZONE_HOME_ELEVATION: "{{ .HASS_HOME_ELEVATION }}"
        SECRET_ZONE_OB_PARENTS_LATITUDE: "{{ .HASS_OB_PARENTS_LATITUDE }}"
        SECRET_ZONE_OB_PARENTS_LONGITUDE: "{{ .HASS_OB_PARENTS_LONGITUDE }}"

        # Production API access for entity mirroring
        SECRET_PROD_HASS_URL: "{{ .HASS_EXTERNAL_URL }}"
        SECRET_PROD_HASS_TOKEN: "{{ .HASS_PROD_API_TOKEN }}"

  dataFrom:
    - find:
        path: HASS_
    - find:
        path: POSTGRES_
