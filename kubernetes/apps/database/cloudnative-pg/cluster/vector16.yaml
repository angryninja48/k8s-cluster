---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres16-vector
  namespace: database
spec:
  instances: 2
  imageName: ghcr.io/cloudnative-pg/postgresql:16.6-32
  primaryUpdateStrategy: unsupervised
  storage:
    size: 10Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  postgresql:
    shared_preload_libraries:
      - "vector.so"
    parameters:
      max_connections: "200"
      shared_buffers: 256MB
  resources:
    requests:
      cpu: 500m
    limits:
      memory: 2.5Gi
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://postgresql/
      endpointURL: ${SECRET_S3_URL}
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster postgres16-vector-v1
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secrets
          key: MINIO_ACCESS_KEY
        secretAccessKey:
          name: cloudnative-pg-secrets
          key: MINIO_SECRET_KEY
  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  bootstrap:
    initdb:
      database: vector
      owner: vector
      postInitApplicationSQL:
        - CREATE EXTENSION IF NOT EXISTS vector;
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # externalClusters:
  #   - name: *previousCluster
  #     barmanObjectStore:
  #       <<: *barmanObjectStore
  #       serverName: *previousCluster
