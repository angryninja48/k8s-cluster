---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: media
spec:
  chartRef:
    kind: OCIRepository
    name: radarr
  interval: 1h
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.27.4
            env:
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: dark
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 80
              RADARR__UPDATE__BRANCH: develop
              TZ: "${TIMEZONE}"
            envFrom:
              - secretRef:
                  name: radarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
                memory: 256M
              limits:
                memory: 1Gi

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          hajimari.io/icon: mdi:movie-roll
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /config
      downloads:
        enabled: true
        type: nfs
        server: 10.20.0.3
        path: /volume1/Downloads/
        globalMounts:
          - path: /mnt/storage/downloads
      video:
        enabled: true
        type: nfs
        server: 10.20.0.3
        path: /volume1/Videos
        globalMounts:
          - path: /mnt/storage/video
      tmp:
        type: emptyDir
